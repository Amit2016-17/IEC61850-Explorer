CMAKE_MINIMUM_REQUIRED(VERSION 3.0.2)
project(iec61850Explorer)
ENABLE_TESTING()
option(BUILD_GUI "Build GUI (Requires Qt5)" ON)

SET(EXP_VERSION_MAJOR 0)
SET(EXP_VERSION_MINOR 4)
SET(EXP_VERSION_PATCH 2)
configure_file(
		${CMAKE_CURRENT_SOURCE_DIR}/include/iec61850Exp_version.h.in
		${CMAKE_CURRENT_BINARY_DIR}/include/iec61850Exp_version.h
		@ONLY)
include_directories(${CMAKE_CURRENT_BINARY_DIR}/include)
if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Werror")
endif()
include_directories(include)
IF(WIN32)
	link_directories(third_party/winpcap)
	link_directories(third_party/libiec61850/lib)
	include_directories(third_party/libiec61850/include)
ENDIF()
add_subdirectory(src)
add_subdirectory(tests)

# Directives for building package
IF(EXISTS "${CMAKE_ROOT}/Modules/CPack.cmake")
INCLUDE(InstallRequiredSystemLibraries)
IF(WIN32)
	set(CPACK_NSIS_CREATE_ICONS "CreateShortCut '\$SMPROGRAMS\\\\$STARTMENU_FOLDER\\\\iec61850-Explorer.lnk' '\$INSTDIR\\\\bin\\\\iec61850-Explorer.exe'") 
ENDIF(WIN32)
SET(CPACK_PACKAGE_DESCRIPTION "IEC61850-Explorer")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "IEC61850-Explorer")
SET(CPACK_PACKAGE_VENDOR "IEC61850-Explorer team")
SET(CPACK_PACKAGE_CONTACT "http://github.com/cedricboudinet/iec61850-explorer")
SET(CPACK_PACKAGE_VERSION_MAJOR "${EXP_VERSION_MAJOR}")
SET(CPACK_PACKAGE_VERSION_MINOR "${EXP_VERSION_MINOR}")
SET(CPACK_PACKAGE_VERSION_PATCH "${EXP_VERSION_PATCH}")
SET(CPACK_PACKAGE_FILE_NAME "${CMAKE_PROJECT_NAME}_${EXP_VERSION_MAJOR}.${EXP_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}_${CMAKE_SYSTEM_PROCESSOR}")
SET(CPACK_SOURCE_PACKAGE_FILE_NAME "${CMAKE_PROJECT_NAME}_${EXP_VERSION_MAJOR}.${EXP_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
 
set(CPACK_COMPONENTS_ALL Applications)
set(CPACK_PACKAGE_INSTALL_DIRECTORY "IEC61850-Explorer")
INCLUDE(CPack)
 
ENDIF(EXISTS "${CMAKE_ROOT}/Modules/CPack.cmake")

find_package(Doxygen)
if(DOXYGEN_FOUND)
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile @ONLY)
add_custom_target(doc
${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
COMMENT "Generating API documentation with Doxygen" VERBATIM
)
endif(DOXYGEN_FOUND)
