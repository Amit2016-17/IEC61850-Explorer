CMAKE_MINIMUM_REQUIRED(VERSION 3.0.2)
project(iec61850Explorer)
option(BUILD_GUI "Build GUI (Requires Qt5)" ON)

SET(EXP_VERSION_MAJOR 0)
SET(EXP_VERSION_MINOR 1)
SET(EXP_VERSION_PATCH 0)
IF(WIN32)
	link_directories(third_party/winpcap)
	link_directories(third_party/libiec61850/lib)
	include_directories(third_party/libiec61850/include)
ENDIF()
add_executable(iec61850Explorer iec61850Explorer.cpp iec61850Exp_fun.cpp)
target_link_libraries(iec61850Explorer iec61850 pthread)

add_executable(iec61850_varCmd iec61850_varCmd.cpp)
target_link_libraries(iec61850_varCmd iec61850 pthread)

add_executable(iec61850_testsrv iec61850_testsrv.c)
target_link_libraries(iec61850_testsrv iec61850 pthread)

IF(BUILD_GUI)
	find_package(Qt5Widgets REQUIRED)
	include_directories(${Qt5Widgets_INCLUDES})
	add_executable(iec61850ExplorerGUI iec61850ExplorerGUI.cpp VariablesListWindow.cpp iec61850Exp_fun.cpp)
	qt5_use_modules(iec61850ExplorerGUI Widgets)
	set_target_properties(iec61850ExplorerGUI PROPERTIES AUTOMOC TRUE)
	target_link_libraries(iec61850ExplorerGUI iec61850 pthread)
ENDIF(BUILD_GUI)
if(WIN32)
	set(LIBDEP_4_WIN wpcap ws2_32 iphlpapi)
	target_link_libraries(iec61850Explorer ${LIBDEP_4_WIN})
	target_link_libraries(iec61850ExplorerGUI ${LIBDEP_4_WIN})
	target_link_libraries(iec61850_testsrv ${LIBDEP_4_WIN})
	target_link_libraries(iec61850_varCmd ${LIBDEP_4_WIN})
endif()

INSTALL(TARGETS iec61850ExplorerGUI RUNTIME DESTINATION bin)
INSTALL(TARGETS iec61850Explorer RUNTIME DESTINATION bin)
INSTALL(TARGETS iec61850_varCmd RUNTIME DESTINATION bin)
# Directives for building package
IF(EXISTS "${CMAKE_ROOT}/Modules/CPack.cmake")
INCLUDE(InstallRequiredSystemLibraries)
 
SET(CPACK_PACKAGE_DESCRIPTION "IEC61850-Explorer")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "IEC61850-Explorer")
SET(CPACK_PACKAGE_VENDOR "IEC61850-Explorer team")
SET(CPACK_PACKAGE_CONTACT "http://github.com/cedricboudinet/iec61850-explorer")
SET(CPACK_PACKAGE_VERSION_MAJOR "${EXP_VERSION_MAJOR}")
SET(CPACK_PACKAGE_VERSION_MINOR "${EXP_VERSION_MINOR}")
SET(CPACK_PACKAGE_VERSION_PATCH "${EXP_VERSION_PATCH}")
SET(CPACK_PACKAGE_FILE_NAME "${CMAKE_PROJECT_NAME}_${EXP_VERSION_MAJOR}.${EXP_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}_${CMAKE_SYSTEM_PROCESSOR}")
SET(CPACK_SOURCE_PACKAGE_FILE_NAME "${CMAKE_PROJECT_NAME}_${EXP_VERSION_MAJOR}.${EXP_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
 
SET(CPACK_COMPONENTS_ALL Libraries ApplicationData)
INCLUDE(CPack)
 
ENDIF(EXISTS "${CMAKE_ROOT}/Modules/CPack.cmake")
